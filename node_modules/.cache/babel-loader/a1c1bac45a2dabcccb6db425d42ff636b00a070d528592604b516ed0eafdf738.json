{"ast":null,"code":"var _jsxFileName = \"/Users/chrisleach/Documents/mywebsite/src/components/pages/Page1.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../../App.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Page1() {\n  _s();\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n    fetchData();\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"page1\",\n    children: \"PAGE 1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(Page1, \"7q1HsI+objvXcfipZrnuaCD+j/U=\");\n_c = Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Page1","_s","lat","setLat","long","setLong","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","then","res","json","result","setData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisleach/Documents/mywebsite/src/components/pages/Page1.js"],"sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport { useEffect, useState } from \"react\";\n\nexport default function Page1() {\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n      .then(res => res.json())\n      .then(result => {\n        setData(result)\n        console.log(result);\n      });\n    }\n    fetchData();\n  }, [lat,long])\n\n  return <h1 className='page1'>PAGE 1</h1>;\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAE;QAC1DP,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;QAChCP,OAAO,CAACK,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;MACpC,CAAC,CAAC;MAEF,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,iBAAgBf,GAAI,QAAOE,IAAK,uBAAsBW,OAAO,CAACC,GAAG,CAACE,iBAAkB,EAAC,CAAC,CAClIC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;QACdC,OAAO,CAACD,MAAM,CAAC;QACfE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC;IACDhB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,GAAG,EAACE,IAAI,CAAC,CAAC;EAEd,oBAAOL,OAAA;IAAI2B,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC1C;AAAC9B,EAAA,CAvBuBD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}